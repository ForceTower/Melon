ext {
    buildVersion = {
        try {
            def commit_count = Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

            def postfix = "[release]"
            def (major, minor, patch) = version.toLowerCase().replaceAll('-', '').tokenize('.')
            if (patch.endsWith("dev")) {
                patch = patch.replaceAll("[^0-9]", "")
                postfix = "[development]"
            } else {
                if (patch.endsWith("pr")) {
                    patch = patch.replaceAll("[^0-9]", "")
                    postfix = "[pre-release]"
                }
            }

            (major, minor, patch) = [major, minor, patch].collect { it.toInteger() }

            def name = "${major}.${minor}.${patch} build ${commit_count} ${postfix}"
            def code = (21 * 100000) + commit_count
            return [code, name]
        } catch (Exception ignored) {
            System.err.println("No git installed on the machine or not on a git repo. UNES will not automate version name and code")
            return [1, '1.0.0-rev0.no.git']
        }
    }
}