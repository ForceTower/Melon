ext {
    buildVersion = {
        try {
            def commit_count = Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())
            def branch = 'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir).text.trim()

            def (major, minor, patch) = version.toLowerCase().replaceAll('-', '').tokenize('.')

            def postfix = "release"
            // def adder = 0
            if (branch == "development") {
                // adder = 100000
                postfix = "testing"
            }

            (major, minor, patch) = [major, minor, patch].collect { it.toInteger() }

            def name = "${major}.${minor}.${patch}.${commit_count}.rev-${postfix}"
            def code = (21 * 100000) + commit_count + adder
            return [code, name]
        } catch (Exception ignored) {
            System.err.println("No git installed on the machine or not on a git repo. UNES will not automate version name and code")
            return [1, '1.0.0-rev0.no.git']
        }
    }
}