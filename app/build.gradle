/*
 * This file is part of the UNES Open Source Project.
 * UNES is licensed under the GNU GPLv3.
 *
 * Copyright (c) 2019.  Jo√£o Paulo Sena <joaopaulo761@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'io.fabric'
apply plugin: 'org.jmailen.kotlinter'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion compileSdk
    buildToolsVersion toolsVersion

    defaultConfig {
        applicationId 'com.forcetower.uefs'
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        def (code, name) = buildVersion()
        versionCode code
        versionName name
        multiDexEnabled true

        buildConfigField "String", "SIECOMP_TIMEZONE", "\"America/Bahia\""
        buildConfigField "String", "SIECOMP_DAY1_START", "\"2019-10-16T08:00:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY1_END", "\"2019-10-16T17:30:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY2_START", "\"2019-10-17T08:00:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY2_END", "\"2019-10-17T17:30:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY3_START", "\"2019-10-18T08:00:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY3_END", "\"2019-10-18T17:30:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY4_START", "\"2019-10-21T08:00:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY4_END", "\"2019-10-21T17:30:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY5_START", "\"2019-10-22T08:00:00-03:00\""
        buildConfigField "String", "SIECOMP_DAY5_END", "\"2019-10-22T17:30:00-03:00\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }

        ndk {
            abiFilters "arm64-v8a", "armeabi", "armeabi-v7a", "mips", "mips64", "x86", "x86_64"
        }
    }

    signingConfigs {
        release {
            def password = System.getenv("UNES_KEYSTORE_PASSWORD")
            if (password == null)
                password = "android"

            def alias = System.getenv("UNES_KEYSTORE_ALIAS")
            if (alias == null)
                alias = "androiddebugkey"

            def keyPass = System.getenv("UNES_KEYSTORE_PRIVATE_KEY_PASSWORD")
            if (keyPass == null)
                keyPass = "android"

            storeFile rootProject.file("sign.jks")
            storePassword password
            keyAlias alias
            keyPassword keyPass
        }
        debug {
            storeFile rootProject.file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
        }
    }

    dataBinding {
        enabled true
    }

    kapt {
        correctErrorTypes true
        javacOptions {
            option("-Xmaxerrs", 1000)
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'InvalidPackage'
        abortOnError true
    }
    dynamicFeatures = [":aeri", ":dashboard"]


}

play {
    serviceAccountCredentials rootProject.file("unes_uefs_publisher.json")
    track "internal"
    defaultToAppBundles true
}

kotlinter {
    allowWildcardImports false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':bypass')
    implementation project(path: ':core')

    // Auto start
    implementation 'com.github.judemanutd:autostarter:1.0.6'

    // Juice scrapper
    implementation "com.github.forcetower:juice:$sagres"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android X
    implementation "androidx.core:core-ktx:$ktx"
    implementation "androidx.annotation:annotation:$annotation"
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "com.google.android.material:material:$google_material"
    implementation "androidx.palette:palette:$pallete"
    implementation "androidx.browser:browser:$browser"
    implementation "androidx.preference:preference:$preference"
    implementation "com.google.android:flexbox:$flexbox"
    implementation "androidx.fragment:fragment:$fragment"
    implementation "androidx.fragment:fragment-ktx:$fragment"

    // Architecture
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle"

    implementation "androidx.navigation:navigation-ui:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.navigation:navigation-fragment:$navigation"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"

    // Paging
    implementation "androidx.paging:paging-runtime:$paging"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"

    // Work manager
    implementation "androidx.work:work-runtime:$work_manager"
    implementation "androidx.work:work-runtime-ktx:$work_manager"
    implementation "androidx.work:work-gcm:$work_manager"

    // Dependency injection
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    // Firebase
    implementation "com.google.firebase:firebase-core:$firebase_core"
    implementation "com.google.firebase:firebase-auth:$firebase_auth"
    implementation "com.google.firebase:firebase-messaging:$firebase_messaging"
    implementation "com.google.firebase:firebase-firestore:$firebase_firestore"
    implementation "com.google.firebase:firebase-firestore-ktx:$firebase_firestore"
    implementation "com.google.firebase:firebase-storage:$firebase_storage"
    implementation "com.firebaseui:firebase-ui-storage:$firebase_ui_storage"
    implementation "com.google.firebase:firebase-config:$firebase_remote_config"
    implementation "com.google.firebase:firebase-functions:$firebase_functions"

    // Logs
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlytics_ver") { transitive true }
    implementation "com.jakewharton.timber:timber:$timber"

    // Google Play
    implementation "com.google.android.gms:play-services-games:$gp_games"
    implementation "com.google.android.gms:play-services-auth:$gp_auth"
    implementation "com.google.android.gms:play-services-location:$gp_location"
    implementation "com.android.billingclient:billing:$gp_billing_client"
    implementation "com.google.android.gms:play-services-ads:$gp_admob"
    implementation "com.google.android.play:core:$gp_core"

    // Networking
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.github.franmontiel:PersistentCookieJar:$cookie_jar"

    // Image
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "com.airbnb.android:lottie:$lottie"
    implementation "com.theartofdev.edmodo:android-image-cropper:$image_cropper"

    // Others
    implementation "com.google.code.gson:gson:$gson"
    implementation "org.jsoup:jsoup:$jsoup"
    implementation "com.github.PhilJay:MPAndroidChart:$chart_view"
    implementation "com.mikepenz:aboutlibraries:$about_libraries"
    implementation "pub.devrel:easypermissions:$easy_permissions"
    implementation "com.ramotion.cardslider:card-slider:$card_slider"
    implementation "com.wdullaer:materialdatetimepicker:$date_time_picker"
    implementation "com.github.arimorty:floatingsearchview:$floating_search"
    implementation "com.jakewharton.threetenabp:threetenabp:$zoned_time_date"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin"
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.0'
}

apply plugin: 'com.google.gms.google-services'
