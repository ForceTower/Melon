{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "4bf05f65628ed2b44f0b3b467eef02d3",
    "entities": [
      {
        "tableName": "SAccess",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `username` TEXT NOT NULL, `password` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SPerson",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `exhibitionName` TEXT, `cpf` TEXT, `email` TEXT, `sagres_id` TEXT, `mocked` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "exhibitionName",
            "columnName": "exhibitionName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cpf",
            "columnName": "cpf",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sagresId",
            "columnName": "sagres_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mocked",
            "columnName": "mocked",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_SPerson_sagres_id",
            "unique": true,
            "columnNames": [
              "sagres_id"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_SPerson_sagres_id` ON `${TABLE_NAME}` (`sagres_id`)"
          },
          {
            "name": "index_SPerson_cpf",
            "unique": false,
            "columnNames": [
              "cpf"
            ],
            "createSql": "CREATE  INDEX `index_SPerson_cpf` ON `${TABLE_NAME}` (`cpf`)"
          },
          {
            "name": "index_SPerson_email",
            "unique": false,
            "columnNames": [
              "email"
            ],
            "createSql": "CREATE  INDEX `index_SPerson_email` ON `${TABLE_NAME}` (`email`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SMessageScope",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`uid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sagres_id` TEXT, `clazz_link` TEXT)",
        "fields": [
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sagresId",
            "columnName": "sagres_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "clazzLink",
            "columnName": "clazz_link",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "uid"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_SMessageScope_sagres_id",
            "unique": true,
            "columnNames": [
              "sagres_id"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_SMessageScope_sagres_id` ON `${TABLE_NAME}` (`sagres_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SClass",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `description` TEXT, `kind` TEXT, `link` TEXT, `discipline_link` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "kind",
            "columnName": "kind",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "link",
            "columnName": "link",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "disciplineLink",
            "columnName": "discipline_link",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SClass_link",
            "unique": true,
            "columnNames": [
              "link"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_SClass_link` ON `${TABLE_NAME}` (`link`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "SDisciplineResumed",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `code` TEXT, `name` TEXT, `resumed_name` TEXT, `objective` TEXT, `department_link` TEXT, `link` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "resumedName",
            "columnName": "resumed_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "objective",
            "columnName": "objective",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "departmentLink",
            "columnName": "department_link",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "link",
            "columnName": "link",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_SDisciplineResumed_link",
            "unique": true,
            "columnNames": [
              "link"
            ],
            "createSql": "CREATE UNIQUE INDEX `index_SDisciplineResumed_link` ON `${TABLE_NAME}` (`link`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"4bf05f65628ed2b44f0b3b467eef02d3\")"
    ]
  }
}